<?php
/**
 * Magento Enterprise Edition
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Magento Enterprise Edition End User License Agreement
 * that is bundled with this package in the file LICENSE_EE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://www.magento.com/license/enterprise-edition
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magento.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magento.com for more information.
 *
 * @category    design
 * @package     rwd_default
 * @copyright Copyright (c) 2006-2015 X.commerce, Inc. (http://www.magento.com)
 * @license http://www.magento.com/license/enterprise-edition
 */

/** @var Mage_Page_Block_Html_Topmenu_Renderer $this */
/** @var Varien_Data_Tree_Node $menuTree */
/** @var string $childrenWrapClass */

$html = '';

$children = $menuTree->getChildren();
$parentLevel = $menuTree->getLevel();
$childLevel = is_null($parentLevel) ? 0 : $parentLevel + 1;

$counter = 1;
$childrenCount = $children->count();

$parentPositionClass = $menuTree->getPositionClass();
$itemPositionClassPrefix = $parentPositionClass ? $parentPositionClass . '-' : 'nav-';

foreach ($children as $child) {
    $child->setLevel($childLevel);
    $child->setIsFirst($counter == 1);
    $child->setIsLast($counter == $childrenCount);
    $child->setPositionClass($itemPositionClassPrefix . $counter);

    $category = Mage::getModel('catalog/category')->loadByAttribute('name', $child->getName($child));
    $blockOne = $category->getData('cms_block_1');
    $blockTwo = $category->getData('cms_block_2');

    $outermostClassCode = 'level'. $childLevel;
    $_hasChildren = ($child->hasChildren()) ? 'has-children' : '';

    $html .= '<li '. $this->_getRenderedMenuItemAttributes($child) .'>';

    $html .= '<a href="'. $child->getUrl() .'" class="'. $outermostClassCode .' '. $_hasChildren .'">'. $this->escapeHtml($this->__($child->getName())) .'</a>';

    if (!empty($childrenWrapClass)) {
        $html .= '<div class="'. $childrenWrapClass .'">';
    }

    $nextChildLevel = $childLevel + 1;

    if (!empty($_hasChildren) && $nextChildLevel <= 1) {
        $html .= '<div class="mm-wrapper">';
        $html .= '<div class="mm-inner-wrapper">';
        $html .= '<ul class="level'. $childLevel .'">';
        $html .=     $this->render($child, $childrenWrapClass);
        $html .=     '<li class="level'. $nextChildLevel .' view-all">';
        $html .=         '<a class="level'. $nextChildLevel .' nav-shop-all" href="'. $child->getUrl() .'">';
        $html .=             $this->__('Shop All');
        $html .=         '</a>';
        $html .=     '</li>';
        $html .= '</ul>';
        if($blockTwo){
            $html .= '<div class="block-two">';
            $cmsBlock = Mage::getModel('cms/block')->load($blockTwo);
            $html .= $this->getLayout()->createBlock('cms/block')->setBlockId($cmsBlock->getIdentifier())->toHtml();
            $html .= '</div>';
        }
        $html .= '</div>';
        $html .= '</div>';

    }

    if (!empty($childrenWrapClass)) {
        $html .= '</div>';
    }

    $html .= "</li>\n";

    $counter++;
}

return $html;
