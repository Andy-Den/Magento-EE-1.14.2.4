#
# {{ ansible_managed }}
#

upstream {{ ENV }}_phpfpm {
  server unix:/var/run/php5-ba-mage.sock;
}

server {
  listen      {{ HTTP_PORT }};
  listen      {{ HTTPS_PORT }};
  server_name {{ SERVER_NAME | default(SUBDOMAIN + '.' + DOMAIN) }};
  root        {{ MAGE_ROOT }}/;

  index index.php;

  # add node name to header.
  add_header X-HostName "$hostname";

  # for nginx 1.7+, use always to append headers on 400, 500 pages
  #add_header X-HostName "$hostname" always;

  # termination occurs at load balancer.
  if ($http_x_forwarded_proto = "https") {
    set $detected_https 'on';
  }

  # HOST CONF
  ###########

  autoindex off;

  ##logs
  access_log /var/log/nginx/{{ ENV }}-access.log;
  error_log /var/log/nginx/error.log;

  ## enable compression
  gzip on;
  gzip_min_length  1000;
  gzip_proxied any;
  gzip_types text/plain application/xml text/css text/js application/x-javascript text/javascript application/json application/xml+rss;


  # CUSTOM LOCATION RULES
  #######################

  location = /blueacorn/ping {
    access_log off;
    return 204;
  }

  ## load balancer healthcheck
  location /elb-hc.html {
    access_log off;
    return 200;
  }

  # provide access to urapidflow
  #location ~ ^/var/urapidflow.*$ {
  #  allow all;
  #  autoindex on;
  #}

  # CloudFront CDN + FreeLunchLabs Rewrite
  location ~ /cdn/([0-9]*)/(.*)$ {
    try_files /$2 =404;
  }

  # GENERAL LOCATION RULES
  ########################

  # ensure sensitive magento files are not accessible
  location /app/                { deny all; }
  location /dev/                { deny all; }
  location /includes/           { deny all; }
  location /lib/                { deny all; }
  location /media/downloadable/ { deny all; }
  location /pkginfo/            { deny all; }
  location /report/config.xml   { deny all; }
  location /var/                { deny all; }
  location = /RELEASE_NOTES.txt { deny all; }
  location = /LICENSE_AFL.txt   { deny all; }
  location = /LICENSE.html      { deny all; }
  location = /LICENSE.txt       { deny all; }
  location = /php.ini.sample    { deny all; }
  location = /index.php.sample  { deny all; }

  location @mage{
    rewrite / /index.php?$args;
  }

  location / {
    try_files $uri $uri/ @mage;
    expires 30d;
  }


  # static asset handling
  location ~ \.(jpeg|jpg|gif|png|css|js|ico|swf)$ {
    # don't log static serving
    #   NOTE: kills aggregating bandwidth via weblogs / awstats
    access_log off;

    expires max;
    try_files $uri $uri/ @mage;
  }

  # dynamic PHP content
  location ~ \.php {

    expires off; # let php handle cache rules
    include fastcgi_params;

    fastcgi_param SCRIPT_FILENAME $request_filename;
    fastcgi_read_timeout 300;
    fastcgi_keep_conn on;

    fastcgi_param HTTPS $detected_https if_not_empty;

    #fastcgi_param MAGE_RUN_CODE default;
    #fastcgi_param MAGE_RUN_TYPE store;

    fastcgi_param PHP_VALUE 'newrelic.appname="phpfpm.{{ ENV }}"';

    fastcgi_pass {{ ENV }}_phpfpm;
  }
}
